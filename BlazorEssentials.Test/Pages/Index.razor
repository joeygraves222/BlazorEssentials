@inherits EssentialsBaseComponent
@page "/"

<PageTitle>Index</PageTitle>

<h2>Test the Loading Indicator</h2>

<div class="container">
    <div class="row">
        <h3 class="text-center">Border Style</h3>
    </div>
    <div class="row">
        <div class="col-md-1"></div>
        
        <div class="col-md-5">
            <label>Small</label><br />
            <button class="btn btn-block btn-primary" @onclick="() => ShowLoader(MarkupColor.Primary, LoaderStyle.Border, LoaderSize.SM)">Show Loader</button>          <br /><br />
            <button class="btn btn-block btn-secondary" @onclick="() => ShowLoader(MarkupColor.Secondary, LoaderStyle.Border, LoaderSize.SM)">Show Loader</button>      <br /><br />
            <button class="btn btn-block btn-success" @onclick="() => ShowLoader(MarkupColor.Success, LoaderStyle.Border, LoaderSize.SM)">Show Loader</button>          <br /><br />
            <button class="btn btn-block btn-warning" @onclick="() => ShowLoader(MarkupColor.Warning, LoaderStyle.Border, LoaderSize.SM)">Show Loader</button>          <br /><br />
            <button class="btn btn-block btn-danger" @onclick="() => ShowLoader(MarkupColor.Danger, LoaderStyle.Border, LoaderSize.SM)">Show Loader</button>            <br /><br />
            <button class="btn btn-block btn-info" @onclick="() => ShowLoader(MarkupColor.Info, LoaderStyle.Border, LoaderSize.SM)">Show Loader</button>                <br /><br />
            <button class="btn btn-block btn-light" @onclick="() => ShowLoader(MarkupColor.Light, LoaderStyle.Border, LoaderSize.SM)">Show Loader</button>              <br /><br />
            <button class="btn btn-block btn-dark" @onclick="() => ShowLoader(MarkupColor.Dark, LoaderStyle.Border, LoaderSize.SM)">Show Loader</button>                <br /><br />
        </div>
        <div class="col-md-5">
            <label>Regular</label><br />
            <button class="btn btn-block btn-primary" @onclick="() => ShowLoader(MarkupColor.Primary, LoaderStyle.Border, LoaderSize.MD)">Show Loader</button>          <br /><br />
            <button class="btn btn-block btn-secondary" @onclick="() => ShowLoader(MarkupColor.Secondary, LoaderStyle.Border, LoaderSize.MD)">Show Loader</button>      <br /><br />
            <button class="btn btn-block btn-success" @onclick="() => ShowLoader(MarkupColor.Success, LoaderStyle.Border, LoaderSize.MD)">Show Loader</button>          <br /><br />
            <button class="btn btn-block btn-warning" @onclick="() => ShowLoader(MarkupColor.Warning, LoaderStyle.Border, LoaderSize.MD)">Show Loader</button>          <br /><br />
            <button class="btn btn-block btn-danger" @onclick="() => ShowLoader(MarkupColor.Danger, LoaderStyle.Border, LoaderSize.MD)">Show Loader</button>            <br /><br />
            <button class="btn btn-block btn-info" @onclick="() => ShowLoader(MarkupColor.Info, LoaderStyle.Border, LoaderSize.MD)">Show Loader</button>                <br /><br />
            <button class="btn btn-block btn-light" @onclick="() => ShowLoader(MarkupColor.Light, LoaderStyle.Border, LoaderSize.MD)">Show Loader</button>              <br /><br />
            <button class="btn btn-block btn-dark" @onclick="() => ShowLoader(MarkupColor.Dark, LoaderStyle.Border, LoaderSize.MD)">Show Loader</button>                <br /><br />
        </div>
        
        <div class="col-md-1"></div>
    </div>
    <hr />
    <div class="row">
        <h3 class="text-center">Grow Style</h3>
    </div>
    <div class="row">
        <div class="col-md-1"></div>
        
        <div class="col-md-5">
            <label>Small</label><br />
            <button class="btn btn-block btn-primary" @onclick="() => ShowLoader(MarkupColor.Primary, LoaderStyle.Grow, LoaderSize.SM)">Show Loader</button>            <br /><br />
            <button class="btn btn-block btn-secondary" @onclick="() => ShowLoader(MarkupColor.Secondary, LoaderStyle.Grow, LoaderSize.SM)">Show Loader</button>        <br /><br />
            <button class="btn btn-block btn-success" @onclick="() => ShowLoader(MarkupColor.Success, LoaderStyle.Grow, LoaderSize.SM)">Show Loader</button>            <br /><br />
            <button class="btn btn-block btn-warning" @onclick="() => ShowLoader(MarkupColor.Warning, LoaderStyle.Grow, LoaderSize.SM)">Show Loader</button>            <br /><br />
            <button class="btn btn-block btn-danger" @onclick="() => ShowLoader(MarkupColor.Danger, LoaderStyle.Grow, LoaderSize.SM)">Show Loader</button>              <br /><br />
            <button class="btn btn-block btn-info" @onclick="() => ShowLoader(MarkupColor.Info, LoaderStyle.Grow, LoaderSize.SM)">Show Loader</button>                  <br /><br />
            <button class="btn btn-block btn-light" @onclick="() => ShowLoader(MarkupColor.Light, LoaderStyle.Grow, LoaderSize.SM)">Show Loader</button>                <br /><br />
            <button class="btn btn-block btn-dark" @onclick="() => ShowLoader(MarkupColor.Dark, LoaderStyle.Grow, LoaderSize.SM)">Show Loader</button>                  <br /><br />
        </div>
        <div class="col-md-5">
            <label>Regular</label><br />
            <button class="btn btn-block btn-primary" @onclick="() => ShowLoader(MarkupColor.Primary, LoaderStyle.Grow, LoaderSize.MD)">Show Loader</button>            <br /><br />
            <button class="btn btn-block btn-secondary" @onclick="() => ShowLoader(MarkupColor.Secondary, LoaderStyle.Grow, LoaderSize.MD)">Show Loader</button>        <br /><br />
            <button class="btn btn-block btn-success" @onclick="() => ShowLoader(MarkupColor.Success, LoaderStyle.Grow, LoaderSize.MD)">Show Loader</button>            <br /><br />
            <button class="btn btn-block btn-warning" @onclick="() => ShowLoader(MarkupColor.Warning, LoaderStyle.Grow, LoaderSize.MD)">Show Loader</button>            <br /><br />
            <button class="btn btn-block btn-danger" @onclick="() => ShowLoader(MarkupColor.Danger, LoaderStyle.Grow, LoaderSize.MD)">Show Loader</button>              <br /><br />
            <button class="btn btn-block btn-info" @onclick="() => ShowLoader(MarkupColor.Info, LoaderStyle.Grow, LoaderSize.MD)">Show Loader</button>                  <br /><br />
            <button class="btn btn-block btn-light" @onclick="() => ShowLoader(MarkupColor.Light, LoaderStyle.Grow, LoaderSize.MD)">Show Loader</button>                <br /><br />
            <button class="btn btn-block btn-dark" @onclick="() => ShowLoader(MarkupColor.Dark, LoaderStyle.Grow, LoaderSize.MD)">Show Loader</button>                  <br /><br />
        </div>
        
        <div class="col-md-1"></div>
    </div>
    <hr />
    <div class="row mb-5">
        <h3 class="text-center">Confirm Prompt</h3>
    </div>
    <div class="row mb-5">
        <div class="col-md-1"></div>

        <div class="col-md-5">
            <div class="form-group">
                <label class="control-label">Prompt Title</label>
                <input class="form-control" @bind="PromptTitle" />
            </div>
            <div class="form-group">
                <label class="control-label">Prompt Message</label>
                <textarea class="form-control" @bind="PromptText" rows="3"></textarea>
            </div>
        </div>

        <div class="col-md-5">
            <div class="form-group">
                <label class="control-label">Confirm Button Text</label>
                <input class="form-control" @bind="ConfirmBtnText" />
            </div>
            <div class="form-group">
                <label class="control-label">Deny Button Text</label>
                <input class="form-control" @bind="DenyBtnText" />
            </div>
        </div>

        <div class="col-md-1"></div>
    </div>
    <div class="row mb-5">
        <div class="col-md-4"></div>

        <div class="col-md-4">
            <button @onclick="StartPrompt" class="btn btn-block btn-outline-success">Start Prompt</button>
        </div>

        <div class="col-md-4"></div>
    </div>

    <hr />
    <div class="row mb-5">
        <h3 class="text-center">Device Info</h3>
        
    </div>
    <div class="row mb-5">
        <div class="col-md-2"></div>

        <div class="col-md-4">
            <div class="form-group">
                <label>Device Type:</label><br />
                <hr />
                <label>@DeviceType</label>
            </div>
        </div>

        <div class="col-md-4">
            <div class="form-group">
                <label>Device Info</label><br />
                <hr />
                @if (UserAgent != null)
                {
                    <dl>
                        <dt>OS</dt>
                        <dd>@UserAgent.GetOSType()</dd>

                        <dt>Architecture</dt>
                        <dd>@UserAgent.GetArchitectureType()</dd>
                    </dl>
                }
            </div>
        </div>

        <div class="col-md-2"></div>
    </div>

    <hr />
    <div class="row mb-5">
        <h3 class="text-center">Clipboard</h3>
        
    </div>
    <div class="row mb-5">
        <div class="col-md-2"></div>

        <div class="col-md-4">
            <div class="form-group">
                <label>Copy:</label><br />
                <hr />
                <input class="form-control" @bind="ValueToCopy" />
                <button class="btn btn-outline-info" @onclick="CopyToClipboard">Copy to Clipboard</button>
            </div>
        </div>

        <div class="col-md-4">
            <div class="form-group">
                <label>Paste Here:</label><br />
                <hr />
                <input class="form-control" />
            </div>
        </div>

        <div class="col-md-2"></div>
    </div>
</div>



@code{

    private async void ShowLoader(MarkupColor color, LoaderStyle style, LoaderSize size)
    {
        await JS.ShowLoader("Message Here", style, size, color);

        await Task.Delay(2500);

        await JS.CloseLoader();
    }

    private ClientDeviceType DeviceType { get; set; } 
    private ClientUserAgent UserAgent { get; set; }

    private string PromptTitle { get; set; } = "Test Prompt Title";
    private string PromptText { get; set; } = "Some test text for the prompt body";
    private string ConfirmBtnText { get; set; } = "Yes";
    private string DenyBtnText { get; set; } = "No";

    private string ValueToCopy { get; set; }

    private void CopyToClipboard()
    {
        JS.CopyToClipboard(ValueToCopy);
    }

    private async void StartPrompt()
    {
        var model = new PromptModel()
        {
            Prompt = PromptText,
            Title = PromptTitle,
            ConfirmButtonText = ConfirmBtnText,
            DenyButtonText = DenyBtnText,
            MaxTimeout = 10000
        };
        var result = await JS.ConfirmAsync(model);

        

        Console.Out.WriteLine(result);
    }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        DeviceType = await JS.GetDeviceType();
        UserAgent = await JS.GetUserAgent();
    }
}